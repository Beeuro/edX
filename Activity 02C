	# Star counter
## Format
Sub starcounter
Dim ws as worksheet
Set ws = activesheet
Dim lastrow as long
lastRow = ws.cells(ws.Rows.Count, "D").end(xlUp).row
Dim starcounter as integer
Dim i as long, j as long
For i = 2 To lastrow
starcounter = 0
For j = 4 To 8 assuming stars are in columns D to H
If ws.cells(i, j).value = "Full Star" then
starcounter = starcounter + 1
End if
Next j
ws.cells(i, "I").value = starcounter ' assuming the total column is i
Next i
create charts here

	# End Sub

	# Macro

## Grading
Sub calculategrades
Dim ws as worksheet
Set ws = thisworkbook.sheets("Sheet1") adjust the sheet name as necessary
Dim graderange As range
Set graderange = ws.range("A2:A20") 'djust the range according to where the grades are
Dim gradecell as range
For each gradecell in graderange
Dim score as integer
score = gradecell.value
Dim lettergrade as string
Dim cellcolor as long
Dim statustext as string

## Format
If score >= 90 then
lettergrade = "A"
cellcolor = RGB(0, 255, 0) green
statustext = "Pass"
Elseif score >= 80 then
lettergrade = "B"
cellcolor = RGB(0, 255, 0) green
statustext = "Pass"
Elseif score >= 70 then
lettergrade = "C"
cellcolor = RGB(255, 255, 0) yellow
statustext = "Warning"
        
Else

lettergrade = "F"
cellcolor = RGB(255, 0, 0) red
statustext = "Fail"

End if

gradecell.offset(0, 1).value = lettergrade
gradecell.offset(0, 2).value = statustext
gradecell.offset(0, 2).interior.color = cellcolor
Next gradecell

	# End Sub

	# Bonus
## Format
Sub resetgrades
Dim ws as worksheet
Set ws = thisworkbook.sheets("Sheet1") adjust the sheet name as necessary
Dim graderange As range
Set graderange = ws.range("A2:A20") adjust the range according to where the grades are
Dim gradecell As range

## Mine
For each gradecell in graderange
gradecell.offset(0, 3).value = gradecell.offset(0, 1).value copy current grade to "Last Grade" column, adjust the offset as necessary
gradecell.offset(0, 1).value
gradecell.offset(0, 2).value
gradecell.offset(0, 2).interior.color = RGB(255, 255, 255) white
Next gradecell

	# End Sub

	# Checkerboard
Sub createcheckerboard
    
## Wrangle
Dim i as integer, j As Integer
Dim startrow as integer, startcolumn as integer
Dim cellcolor as long
initialize the starting position of the checkerboard
startrow = 1
startcolumn = 1
loop through each row and column of the 8x8 grid
For i = startRow To startRow + 7
For j = startcolumn to startcolumn + 7
Determine the color of the cell based on its position
Red (255) if the sum of row and column indexes is even, black (0) if odd
If (i + j) mod 2 = 0 then
cellcolor = RGB(255, 0, 0) red

Else

cellcolor = RGB(0, 0, 0) black

End if
            
apply the color to the cell
With cells(i, j).interior
color = cellcolor
End with
Next j
Next i

	# End Sub

	# Bank
Sub processcreditcardpurchases
Dim ws as worksheet
Set ws = thisworkbook.sheets("Sheet1") adjust the sheet name accordingly

## Format
Dim lastrow as long
Lastrow = ws.cells(ws.Rows.Count, "A").end(xlUp).row assuming column A has credit card brands
Dim branddict as object
Set branddict = createobject("Scripting.Dictionary")
Dim i as long
For i = 2 to lastrow assuming row 1 has headers
Dim brand as string
Brand = ws.cells(i, 1).value brand name in column A
Dim amount as double
Amount = ws.cells(i, 2).value transaction amount in column B
If not branddict.exists(Brand) then
Branddict.add brand, amount
  
Else

Branddict(brand) = branddict(brand) + amount

End if
Next i    

loop through the dictionary to create pop-up messages and summarize in a table
Dim key as variant
Dim summaryrow as long
Summaryrow = 2 assuming your summary table starts in row 2 of another sheet   
For each key in branddict.keys
Msgbox "Total for" & Key & Format (BrandDict(Key), "Currency"), vbinformation, "Credit Card Summary"

	# Bonus
With thisworkbook.sheets("Summary") ' change "Summary" to your summary sheet's name

## Format
.Cells(summaryrow, 1).value = key brand name in column a
.Cells(SummaryRow, 2).Value = BrandDict(Key) Total amount in column b
Summaryrow = summaryrow + 1
End with
Next key

	# End Sub 

	# Census
## Location
Sub formatcensusdatasheets
Dim ws as worksheet
Dim lastrow as long
Dim i as long
Dim sheetyear as string
Dim placecolumn as integer
Dim householdincomecolumn as integer
Dim percapitaincomecolumn as integer

## Wrangle
For each ws in thisworkbook.sheets
extract the year from the sheet name
sheetyear = mid(ws.name, instr(ws.name, "_") + 1, 4)
assuming the first row is headers and data starts from the second row
lastrow = ws.cells(ws.rows.count, "A").end(xlUp).row
add the year to the first column of each sheet
For i = 2 To lastrow
ws.cells(i, 1).value = sheetyear & " " & ws.cells(i, 1).value
Next i

split the "Place" column into "County" and "State"
assuming "Place" is in column b (modify if needed)
placecolumn = 2 column b
ws.columns(placecolumn + 1).insert shift:=xltoright, copyorigin:=xlformatfromleftorabove
ws.columns(placecolumn + 1).insert shift:=xltoright, copyorigin:=xlformatfromleftorabove
ws.cells(1, placecolumn + 1).value = "County"
ws.cells(1, placecolumn + 2).value = "State"        
For i = 2 to lastrow
ws.cells(i, placecolumn + 1).value = split(ws.Cells(i, placeColumn).value)(0) county
ws.Cells(i, placeColumn + 2).Value = Split(ws.Cells(i, placeColumn).value)(1) state
Next i        

Remove original "Place" column
ws.columns(placecolumn).delete
convert the household and per capita income columns to currency
assuming these are now at specific columns, adjust as necessary
householdincomecolumn = 4 example column d
percapitaincomecolumn = 5 example column e
        
For i = 2 To lastrow
ws.cells(i, householdincomecolumn).numberformat = "$0.00"
ws.cells(i, perCapitaIncomeColumn).numberformat = "$0.00"
Next i
Next ws

Msgbox "Formatting complete!", vbinformation

	# End Sub

	# Merge
Sub combineworksheets
Dim ws as worksheet
Dim combinedsheet as worksheet
Dim lastrowcombined as long
Dim lastrowcurrentsheet as long
Dim headerrow as range
Dim datarow as range
check if combined_data sheet exists, if not then create it
On error resume next ignore errors temporarily
Set combinedsheet = thisworkbook.sheets("Combined Data")
On error goto 0turn back on regular error handling
If combinedsheet is nothing then
Set combinedsheet = thisworkbook.worksheets.add
combinedsheet.name = "Combined_Data"
    
Else

combinedsheet.cells.clear clear existing data if the sheet already exists

End if
    
Set ws = thisworkbook.sheets(1)
ws.rows(1).copy destination:=combinedsheet.rows(1)
For each ws in thisworkbook.sheets
If ws.name <> "Combined_Data" then
find the last row with data on the combined sheet and the current sheet
lastrowcombined = combinedsheet.cells(combinedSheet.Rows.Count, "A").end(xlUp).row
lastrowcurrentsheet = ws.cells(ws.Rows.Count, "A").end(xlUp).row

check if there's data to copy
if lastrowcurrentsheet > 1 then
set the range to copy from the current sheet
set datarow = ws.range("A2:Z" & lastRowCurrentSheet) adjust Z to your last column
copy & paste the data into the combined sheet
datarow.copy destination:=combinedsheet.rows(lastRowCombined + 1)
End if
Next ws

Msgbox "Data merged successfully!", vbinformation

	# End Sub
